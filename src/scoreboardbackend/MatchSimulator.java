/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scoreboardbackend;

/**
 *
 * @author Wickrama
 */
public class MatchSimulator extends javax.swing.JFrame {

    /**
     * Creates new form MatchSimulator
     */
    public MatchSimulator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableBatting = new javax.swing.JTable();
        lblBattingTeam = new javax.swing.JLabel();
        lblFieldingTeam = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableFielding = new javax.swing.JTable();
        txtBatting = new javax.swing.JTextField();
        txtFielding = new javax.swing.JTextField();
        lblToss = new javax.swing.JLabel();
        txtToss = new javax.swing.JTextField();
        lblSession = new javax.swing.JLabel();
        lblTossBat = new javax.swing.JLabel();
        txtSession = new javax.swing.JTextField();
        txtTossBat = new javax.swing.JTextField();
        lblCurrentBatsman = new javax.swing.JLabel();
        lblRestingBatsman = new javax.swing.JLabel();
        lblCurrentBowler = new javax.swing.JLabel();
        txtCurrentBatsman = new javax.swing.JTextField();
        txtRestingBatsman = new javax.swing.JTextField();
        txtCurrentBowler = new javax.swing.JTextField();
        lblMatchBetween = new javax.swing.JLabel();
        txtMatchBetween = new javax.swing.JTextField();
        lblMatchBetweenDesc = new javax.swing.JLabel();
        chkTossWinnerBat = new javax.swing.JCheckBox();
        btnStartNewMatch = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        lblTarget = new javax.swing.JLabel();
        txtCurrentBatsmanScore = new javax.swing.JTextField();
        txtTarget = new javax.swing.JTextField();
        lblCurrentBatsmanScore = new javax.swing.JLabel();
        lblRestingBatsmanScore = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtRestingBatsmanScore = new javax.swing.JTextField();
        lblOvers = new javax.swing.JLabel();
        txtOvers = new javax.swing.JTextField();
        txtWickets = new javax.swing.JTextField();
        lblWickets = new javax.swing.JLabel();
        lblNos = new javax.swing.JLabel();
        txtNos = new javax.swing.JTextField();
        txtWides = new javax.swing.JTextField();
        lblWides = new javax.swing.JLabel();
        txtLegByes = new javax.swing.JTextField();
        lblLegByes = new javax.swing.JLabel();
        txtByes = new javax.swing.JTextField();
        lblByes = new javax.swing.JLabel();
        lblExtras = new javax.swing.JLabel();
        txtExtras = new javax.swing.JTextField();
        txtPlayCommand = new javax.swing.JTextField();
        lblPlayCommand = new javax.swing.JLabel();
        btnGenRandCmd = new javax.swing.JButton();
        btnPlay = new javax.swing.JButton();
        btnUndo = new javax.swing.JButton();
        spinUndo = new javax.swing.JSpinner();
        btnEnd = new javax.swing.JButton();
        txtChngBat = new javax.swing.JTextField();
        txtChngBowler = new javax.swing.JTextField();
        lblChngBat = new javax.swing.JLabel();
        lblChngBowler = new javax.swing.JLabel();
        btnChngBat = new javax.swing.JButton();
        btnChngBowler = new javax.swing.JButton();
        chkTossWinnerLeft = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Match simulator");
        setResizable(false);

        tableBatting.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Player", "Score", "How out"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableBatting);

        lblBattingTeam.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblBattingTeam.setText("Batting");

        lblFieldingTeam.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFieldingTeam.setText("Fielding");

        tableFielding.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Player", "Wickets", "Catches", "No balls", "Wides"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableFielding);

        txtBatting.setEditable(false);

        txtFielding.setEditable(false);

        lblToss.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblToss.setText("TossL");

        txtToss.setEditable(false);

        lblSession.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSession.setText("Session");

        lblTossBat.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTossBat.setText("TossBat");

        txtSession.setEditable(false);

        txtTossBat.setEditable(false);

        lblCurrentBatsman.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCurrentBatsman.setText("Current batsman");

        lblRestingBatsman.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRestingBatsman.setText("Resting batsman");

        lblCurrentBowler.setText("Bowler");

        txtCurrentBatsman.setEditable(false);

        txtRestingBatsman.setEditable(false);

        txtCurrentBowler.setEditable(false);

        lblMatchBetween.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMatchBetween.setText("Match between");

        lblMatchBetweenDesc.setText("Keep empty for non-database random teams. \nOr enter team1/team2 to load from database.");

        chkTossWinnerBat.setText("Toss winner bats");

        btnStartNewMatch.setText("Start");
        btnStartNewMatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartNewMatchActionPerformed(evt);
            }
        });

        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotal.setText("Total");

        lblTarget.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTarget.setText("Target");

        txtCurrentBatsmanScore.setEditable(false);

        txtTarget.setEditable(false);

        lblCurrentBatsmanScore.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCurrentBatsmanScore.setText("Runs");

        lblRestingBatsmanScore.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRestingBatsmanScore.setText("Runs");

        txtTotal.setEditable(false);

        txtRestingBatsmanScore.setEditable(false);

        lblOvers.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblOvers.setText("Overs");

        txtOvers.setEditable(false);

        txtWickets.setEditable(false);

        lblWickets.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblWickets.setText("Wickets");

        lblNos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNos.setText("No Balls");

        txtNos.setEditable(false);

        txtWides.setEditable(false);

        lblWides.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblWides.setText("Wides");

        txtLegByes.setEditable(false);

        lblLegByes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLegByes.setText("Leg byes");

        txtByes.setEditable(false);

        lblByes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblByes.setText("Byes");

        lblExtras.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblExtras.setText("Total extras");

        txtExtras.setEditable(false);

        txtPlayCommand.setToolTipText("<html><head></head><body><pre><code>\ns = score\n    x = extra\n        w = wide.\n        n = no ball.\n        l = leg bye, score follows.\n        b = bye, score follows.\n    r = runs, score follows.\n\nd = dismissal\n    b = bowled.\n    c = caught, fieldsman index follows.\n    l = LBW.\n    s = stumped.\n    r = run-out, w follows if a wide.\n\n</code></pre>\ne.g. 1 : nothing has happened = \"\" (empty string) <br />\ne.g. 2 : wide = \"sxw\" <br />\ne.g. 3 : four runs for a no ball = \"sxnr4\" <br />\ne.g. 4 : run out for a wide = \"drw\" <br />\ne.g. 5 : scores a single = \"sr1\" <br />\ne.g. 6 : caught out by player 5 = \"dc5\" <br />\n</body></html>");

        lblPlayCommand.setText("Play command");

        btnGenRandCmd.setText("Randomize");

        btnPlay.setText("Play");
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });

        btnUndo.setText("Undo");
        btnUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUndoActionPerformed(evt);
            }
        });

        spinUndo.setModel(new javax.swing.SpinnerNumberModel(1, 1, 6, 1));

        btnEnd.setText("End match and push to database...");

        txtChngBat.setToolTipText("index");

        txtChngBowler.setToolTipText("index");

        lblChngBat.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblChngBat.setText("Change batsman");

        lblChngBowler.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblChngBowler.setText("Change bowler");

        btnChngBat.setText("Change");
        btnChngBat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChngBatActionPerformed(evt);
            }
        });

        btnChngBowler.setText("Change");
        btnChngBowler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChngBowlerActionPerformed(evt);
            }
        });

        chkTossWinnerLeft.setText("Toss: Left team");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblBattingTeam)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBatting))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblToss)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtToss, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblTossBat)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTossBat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblSession)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSession, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFieldingTeam)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFielding, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblNos)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblWides)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtWides, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblLegByes)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtLegByes, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblByes)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtByes, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblExtras)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtExtras, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblCurrentBatsman)
                                            .addComponent(lblRestingBatsman, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCurrentBowler, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtRestingBatsman)
                                            .addComponent(txtCurrentBowler, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                            .addComponent(txtCurrentBatsman))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblRestingBatsmanScore)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtRestingBatsmanScore, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblCurrentBatsmanScore)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtCurrentBatsmanScore, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblTotal)
                                            .addComponent(lblOvers))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtOvers, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblTarget)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblWickets)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtWickets, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(lblMatchBetweenDesc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lblMatchBetween)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMatchBetween, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(98, 98, 98)
                                        .addComponent(chkTossWinnerLeft)
                                        .addGap(18, 18, 18)
                                        .addComponent(chkTossWinnerBat)))
                                .addGap(18, 18, 18)
                                .addComponent(btnStartNewMatch)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblPlayCommand)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnGenRandCmd))
                                .addComponent(lblChngBowler, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(lblChngBat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtChngBowler)
                            .addComponent(txtChngBat)
                            .addComponent(txtPlayCommand))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnChngBat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPlay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnChngBowler, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(142, 142, 142)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEnd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(spinUndo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUndo)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblBattingTeam, lblFieldingTeam, lblSession, lblToss, lblTossBat});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblCurrentBatsman, lblCurrentBowler, lblRestingBatsman});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblOvers, lblTarget, lblTotal, lblWickets});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblByes, lblLegByes, lblNos, lblWides});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnGenRandCmd, btnPlay, btnUndo});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblChngBat, lblChngBowler});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMatchBetween)
                            .addComponent(txtMatchBetween, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkTossWinnerBat)
                            .addComponent(chkTossWinnerLeft))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMatchBetweenDesc))
                    .addComponent(btnStartNewMatch, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblToss)
                    .addComponent(txtToss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTossBat)
                    .addComponent(txtTossBat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSession)
                    .addComponent(txtSession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBattingTeam)
                    .addComponent(txtBatting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFieldingTeam)
                    .addComponent(txtFielding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCurrentBatsman)
                            .addComponent(txtCurrentBatsman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCurrentBatsmanScore)
                            .addComponent(txtCurrentBatsmanScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRestingBatsman)
                            .addComponent(txtRestingBatsman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRestingBatsmanScore)
                            .addComponent(txtRestingBatsmanScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCurrentBowler)
                            .addComponent(txtCurrentBowler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTotal)
                            .addComponent(txtTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTarget))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtOvers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOvers)
                            .addComponent(txtWickets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWickets))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWides)
                    .addComponent(txtWides, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLegByes)
                    .addComponent(txtLegByes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblByes)
                    .addComponent(txtByes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblExtras)
                    .addComponent(txtExtras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNos)
                    .addComponent(txtNos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPlayCommand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPlayCommand)
                    .addComponent(btnGenRandCmd)
                    .addComponent(btnPlay)
                    .addComponent(btnUndo)
                    .addComponent(spinUndo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChngBat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChngBat)
                    .addComponent(btnChngBat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChngBowler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChngBowler)
                    .addComponent(btnChngBowler))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEnd)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartNewMatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartNewMatchActionPerformed
        SB.startNewMatch("", "", 10,
                chkTossWinnerLeft.isSelected(), chkTossWinnerBat.isSelected());
        updateFields();
    }//GEN-LAST:event_btnStartNewMatchActionPerformed

    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed
        SB.play(txtPlayCommand.getText());
        updateFields();
    }//GEN-LAST:event_btnPlayActionPerformed

    private void btnChngBatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChngBatActionPerformed
        try {
            int x = Integer.parseInt(txtChngBat.getText());
            if (x > 0 && x <= 11) {
                SB.changeBatsman(x);
            }
        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event_btnChngBatActionPerformed

    private void btnChngBowlerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChngBowlerActionPerformed
        try {
            int x = Integer.parseInt(txtChngBowler.getText());
            if (x > 0 && x <= 11) {
                SB.changeBowler(x);
            }
        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event_btnChngBowlerActionPerformed

    private void btnUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUndoActionPerformed
        SB.undo((int) spinUndo.getValue());
    }//GEN-LAST:event_btnUndoActionPerformed

    private void updateFields() {
        txtToss.setText(String.valueOf(SB.MatchDetails.tossIsLeft()));
        txtTossBat.setText(String.valueOf(SB.MatchDetails.tossBatsFirst()));
        txtSession.setText(String.valueOf(SB.MatchDetails.session()));

        txtBatting.setText(String.valueOf(SB.BatsmanDetails.teamName()));
        txtFielding.setText(String.valueOf(SB.FieldsmanDetails.teamName()));

        txtCurrentBatsman.setText(String.valueOf(SB.BatsmanDetails.name(SB.MatchDetails.currentBatsmanIndex())));
        txtCurrentBatsmanScore.setText(String.valueOf(SB.BatsmanDetails.totalRuns(SB.MatchDetails.currentBatsmanIndex(), false)));
        txtRestingBatsman.setText(String.valueOf(SB.BatsmanDetails.name(SB.MatchDetails.restingBatsmanIndex())));
        txtRestingBatsmanScore.setText(String.valueOf(SB.BatsmanDetails.totalRuns(SB.MatchDetails.restingBatsmanIndex(), false)));

        txtCurrentBowler.setText(String.valueOf(SB.FieldsmanDetails.name(SB.MatchDetails.currentBowlerIndex())));

        txtTotal.setText(String.valueOf(SB.MatchDetails.total()));
        txtTarget.setText(String.valueOf(SB.MatchDetails.target()));
        txtOvers.setText(SB.MatchDetails.currentOverIndex() + "." + SB.MatchDetails.currentBallIndex());
        txtWickets.setText(String.valueOf(SB.MatchDetails.wickets()));

        txtNos.setText(String.valueOf(SB.MatchDetails.noBalls()));
        txtWides.setText(String.valueOf(SB.MatchDetails.wides()));
        txtLegByes.setText(String.valueOf(SB.MatchDetails.legByes()));
        txtByes.setText(String.valueOf(SB.MatchDetails.byes()));
        txtExtras.setText(String.valueOf(SB.MatchDetails.extras()));

        System.out.println(SB.MatchDetails.currentOverScoreView());

        for (int i = 1; i <= 11; i++) {
            tableBatting.setValueAt(SB.BatsmanDetails.name(i), i - 1, 0);
            tableBatting.setValueAt(SB.BatsmanDetails.totalRuns(i, false), i - 1, 1);
        }

        for (int i = 1; i <= 11; i++) {
            tableFielding.setValueAt(SB.FieldsmanDetails.name(i), i - 1, 0);
            tableFielding.setValueAt(SB.FieldsmanDetails.wickets(i, false), i - 1, 1);
            tableFielding.setValueAt(SB.FieldsmanDetails.catches(i, false), i - 1, 2);
            tableFielding.setValueAt(SB.FieldsmanDetails.noBalls(i, false), i - 1, 3);
            tableFielding.setValueAt(SB.FieldsmanDetails.wideBalls(i, false), i - 1, 4);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatchSimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatchSimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatchSimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatchSimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MatchSimulator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChngBat;
    private javax.swing.JButton btnChngBowler;
    private javax.swing.JButton btnEnd;
    private javax.swing.JButton btnGenRandCmd;
    private javax.swing.JButton btnPlay;
    private javax.swing.JButton btnStartNewMatch;
    private javax.swing.JButton btnUndo;
    private javax.swing.JCheckBox chkTossWinnerBat;
    private javax.swing.JCheckBox chkTossWinnerLeft;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBattingTeam;
    private javax.swing.JLabel lblByes;
    private javax.swing.JLabel lblChngBat;
    private javax.swing.JLabel lblChngBowler;
    private javax.swing.JLabel lblCurrentBatsman;
    private javax.swing.JLabel lblCurrentBatsmanScore;
    private javax.swing.JLabel lblCurrentBowler;
    private javax.swing.JLabel lblExtras;
    private javax.swing.JLabel lblFieldingTeam;
    private javax.swing.JLabel lblLegByes;
    private javax.swing.JLabel lblMatchBetween;
    private javax.swing.JLabel lblMatchBetweenDesc;
    private javax.swing.JLabel lblNos;
    private javax.swing.JLabel lblOvers;
    private javax.swing.JLabel lblPlayCommand;
    private javax.swing.JLabel lblRestingBatsman;
    private javax.swing.JLabel lblRestingBatsmanScore;
    private javax.swing.JLabel lblSession;
    private javax.swing.JLabel lblTarget;
    private javax.swing.JLabel lblToss;
    private javax.swing.JLabel lblTossBat;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblWickets;
    private javax.swing.JLabel lblWides;
    private javax.swing.JSpinner spinUndo;
    private javax.swing.JTable tableBatting;
    private javax.swing.JTable tableFielding;
    private javax.swing.JTextField txtBatting;
    private javax.swing.JTextField txtByes;
    private javax.swing.JTextField txtChngBat;
    private javax.swing.JTextField txtChngBowler;
    private javax.swing.JTextField txtCurrentBatsman;
    private javax.swing.JTextField txtCurrentBatsmanScore;
    private javax.swing.JTextField txtCurrentBowler;
    private javax.swing.JTextField txtExtras;
    private javax.swing.JTextField txtFielding;
    private javax.swing.JTextField txtLegByes;
    private javax.swing.JTextField txtMatchBetween;
    private javax.swing.JTextField txtNos;
    private javax.swing.JTextField txtOvers;
    private javax.swing.JTextField txtPlayCommand;
    private javax.swing.JTextField txtRestingBatsman;
    private javax.swing.JTextField txtRestingBatsmanScore;
    private javax.swing.JTextField txtSession;
    private javax.swing.JTextField txtTarget;
    private javax.swing.JTextField txtToss;
    private javax.swing.JTextField txtTossBat;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtWickets;
    private javax.swing.JTextField txtWides;
    // End of variables declaration//GEN-END:variables
}
